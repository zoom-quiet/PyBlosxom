<?xml version="1.0"?>
<!DOCTYPE content [ <!ENTITY nbsp " "> ]>
<rdf:RDF xml:base="/pyblosxom/rdf"
         xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:dc="http://purl.org/dc/elements/1.1/">

<rdf:Description rdf:about="/pyblosxom">
  <dc:title> Z<sub>en</sub>o<sub>f</sub>o<sub>pen</sub>M<sup>ind</sup>. Q<sub>uickly</sub>u<sub>tility</sub>i<sub>nternet</sub>e<sub>asy</sub>t<sup>echnic</sup> </dc:title>
  <dc:description> Zoom.Quiet's PyBlosxom blogging </dc:description>
  <dc:creator> Zoom.Quiet &lt;zoomquiet+blog [AT] gmail.com&gt; </dc:creator>
  <dc:language> zh </dc:language>
  <dc:format> text/html </dc:format>
  <dc:rights> Copyright 2001-2012 Zoom.Quiet </dc:rights>
</rdf:Description>

<rdf:Description rdf:about="/pyblosxom/utility/Subversion/intoSVN-2006-01-01-23-23">
  <dc:title> Subversion </dc:title>
  <dc:creator> Zoom.Quiet &lt;zoomquiet+blog [AT] gmail.com&gt; </dc:creator>
  <dc:date> 2006-01-01T15:23:00Z </dc:date>
  <dc:language> zh </dc:language>
  <dc:format> text/html </dc:format>
  <dc:rights> Copyright 2001-2012 Zoom.Quiet </dc:rights>

  <content>
    <div class="header" id="header">
<a name='toptopS04yV0U1V' id='toptopS04yV0U1V'></a><h1>Subversion</h1>
<h2>为了颠覆CVS的版本管理系统！</h2>
</div>

<div class="toc" id="toc">
  <ol>
  <li><a href="#toc1R0VYQ0FVM">SVN vs CVS</a>
  </li>
  <li><a href="#toc2R0lYQ0JaT">啄木鸟的体验</a>
  </li>
  <li><a href="#toc3R01YQ0E1U">v1.3.0体验</a>
    <ul>
    <li><a href="#toc4R01YRENMU">3.1. 继续</a>
    </li>
    </ul>
  </li>
  </ol>

</div>
<div class="body" id="body">
<a id="toc1R0VYQ0FVM" name="toc1R0VYQ0FVM"></a>
<h1><A href='#toptopS04yV0U1V'> 1. SVN vs CVS </A></h1>
<p>
在本地使用自个儿习惯的格式来写，通过SVN 自动版本同步到PyBlsxom发布！
</p>
<dl>
<dt>好处：</dt><dd>
    <ol>
    <li>使用DB4有事务支持
    </li>
    <li>二进制文件可版本管理
    </li>
    <li>速度快！
    </li>
    <li>离线操作丰富
    </li>
    <li>...
    </li>
    </ol>
</dd>
<dt>坏处:</dt><dd>
    <ul>
    <li>使用DB 数据可能<i>变脏</i>
    </li>
    <li>DB4 管理复杂
     <ul>
     <li>不过，到了1.2.1以后也支持CVS样儿的文件型数据管理了
    -
     </li>
     </ul>
    </li>
    </ul>
</dd>
</dl>

<a id="toc2R0lYQ0JaT" name="toc2R0lYQ0JaT"></a>
<h1><A href='#toptopS04yV0U1V'> 2. 啄木鸟的体验 </A></h1>
<p>
很早就使用SVN 进行代码管理了，统一的体验就是快！
</p>
<p>
<a href="http://cvs.woodpecker.org.cn/trac/">trac of 啄木鸟</a>
</p>
<p>
<a href="http://wiki.woodpecker.org.cn/moin/AllAboutSubversion">啄木鸟SVN使用说明</a>
</p>
<a id="toc3R01YQ0E1U" name="toc3R01YQ0E1U"></a>
<h1><A href='#toptopS04yV0U1V'> 3. v1.3.0体验 </A></h1>
<dl>
<dt>FreeBSD6.0 为准:</dt><dd>
    <ol>
    <li>升级ports:
        <ul>
        <li><code>portsnap upgrade</code>
        </li>
        <li>比以前的什么
        <code>cvsup -sgL2 /usr/share/examples/cvsup/ports-supfile -h cvsup{,2-6}.cn.freebsd.org</code> 
        要直接的多
        </li>
        </ul>
    </li>
    <li>安装SVN:
<pre>
# cd /usr/ports/devel/subversion
# make install clean
</pre>
    </li>
    <li>创建SVN仓库:
        <ul>
        <li><code>svnadmin create --fs-type fsfs /path/to/ur/svnrepo</code>
        </li>
        <li>建立使用 <a href="http://www.subversion.org.cn/svnbook/1.1/svn-ch-5.html#svn-ch-5-sect-1.3">FSFS 存储的仓库</a>
        </li>
        </ul>
    </li>
    <li>启动服务:
        <ul>
        <li>选择<b>svnserve</b>:
        </li>
        <li><a href="http://www.subversion.org.cn/svnbook/1.1/svn-ch-6.html#svn-ch-6-sect-1">根据对比</a>
        </li>
        <li><b>svnserve</b> 模式依赖最小,管理也方便，速度还快！
        </li>
        </ul>
        <ol>
        <li>inetd 方法启动:
            <ul>
            <li>确认:
<pre>
    /etc/services 有
svn           3690/tcp   # Subversion
svn           3690/udp   # Subversion
    /etc/inetd.conf 有
svn stream tcp nowait svnowner /usr/bin/svnserve svnserve -i

</pre>
            </li>
            <li><code>svnserve -i</code> 命令启动
            </li>
            <li>每有请求，就会创建一个svnserve进程，处理完后自杀
            </li>
            </ul>
        </li>
        <li>作为独立“守护”进程:
            <ul>
            <li>直接<code>svnserve -d --listen-port=和--listen-host=</code>
            选项来自定义“绑定”的端口和主机名启动
            </li>
            <li>创建一个驻留内存的进程来影响SVN事务
            </li>
            <li>也可限制发布:
<pre>
svnserve -d -r /path/to/ur/svnrepos/
</pre>
            仅仅发布指定的SVN仓库，这样一来访问时就不用知道服务端系统路径了
            </li>
            </ul>
        </li>
        </ol>
    </li>
    <li>权限管理:
        <ul>
        <li>1.3.0 的SVN提供了足够好用的默许权限控制！
        不用什么 Apache 的额外支持就足够进行管理了!
        </li>
        <li><i>svnserve.conf</i>中指定:
<pre>
password-db = passwd
authz-db = authz
...
</pre>
        </li>
        <li>就可以在 <b>passwd</b> 文件中定义口令
<pre>
[users]
harry = harryssecret
sally = sallyssecret
...
</pre>
        </li>
        <li><b>authz</b> 中进行用户组，代码目录访问权限的分配了
<pre>
[groups]
harry_and_sally = harry,sally
[/foo/bar]
harry = rw
* = 
[repository:/baz/fuz]
@harry_and_sally = rw
* = r
</pre>
        </li>
        <li>比以前的只能口令，要丰富，足够的很多了！
        </li>
        </ul>
    </li>
    <li>备份管理:
        <ul>
        <li><b>hotcopy</b> 真实可用的热备！
<pre>
svnadmin hotcopy /path/to/ur/repos /path/to/backup/ &amp;
</pre>
        </li>
        </ul>
    </li>
    <li>事务管理:
        <ul>
        <li>高级，但是实用有趣的 
        <b><a href="http://wiki.woodpecker.org.cn/moin/SubversionHooks">HOOKs</a></b> 技术了！
        </li>
        <li>最基础的 ，将<code>post-commit.tmpl</code> cp 为 post-commit,
        加入你自个儿的事务脚本
<pre>
HOOKS="/path/to/ur/repos/hooks/script"
$HOOKS/post-commit.py "$REPOS" "$REV"
</pre>
        </li>
        <li>啄木鸟现在使用的 <a href="/pyblosxom/OpenSource/Subversion/hooks/post-commit.phtm">post-commit.py</a>自动将检入活动记录在案
        </li>
        </ul>
    </li>
    </ol>
</dd>
</dl>

<a id="toc4R01YRENMU" name="toc4R01YRENMU"></a>
<h2><A href='#toptopS04yV0U1V'> 3.1. 继续 </A></h2>
<p>
以上是快记，具体使用中的体会，妙处要长期发现记录在案 的…………
</p>
<hr class="light" />
<ul>
<li>动力源自::<b><a href="http://txt2tags.sf.net">txt2tags</a></b>
</li>
<li>t2t渲染:: 2010-10-09 02:21:36
</li>
</ul>

<p>
<img align="middle" src="/pybimage/technorati-over.gif" border="0" alt=""/>
    <a href="http://www.technorati.com/tags/OpenSource">OpenSource</a>
    ,<a href="http://www.technorati.com/tags/Subversion">hacking</a>
</p>
</div>

<!-- xhtml code generated by txt2tags 2.4 (http://txt2tags.sf.net) -->
<!-- cmdline: txt2tags ./utility/Subversion/intoSVN-2006-01-01-23-23.t2t -->

  </content>

  <rdf:Seq>

<rdf:Description rdf:about="/pyblosxom/techic/PyBlosxom/PyblosxomInstallog-2006-01-01-23-23">
  <dc:title> PyBlosxom 重启 </dc:title>
  <dc:creator> Zoom.Quiet &lt;zoomquiet+blog [AT] gmail.com&gt; </dc:creator>
  <dc:date> 2006-01-01T15:23:00Z </dc:date>
  <dc:language> zh </dc:language>
  <dc:format> text/html </dc:format>
  <dc:rights> Copyright 2001-2012 Zoom.Quiet </dc:rights>

  <content>
    <div class="header" id="header">
<a name='toptopS0I0VUUzR' id='toptopS0I0VUUzR'></a><h1>PyBlosxom 重启</h1>
<h2>定制笔记</h2>
<h3>t2t渲染:2010-10-09 02:21:38</h3>
</div>

<div class="toc" id="toc">
  <ol>
  <li><a href="#toc1R0VYQ0JaT">初始安装</a>
  </li>
  <li><a href="#toc2R0lYQ0IyR">规划</a>
    <ul>
    <li><a href="#toc3R0lYRENMU">2.1. PyBlosxom</a>
    </li>
    </ul>
  </li>
  </ol>

</div>
<div class="body" id="body">
<a id="toc1R0VYQ0JaT" name="toc1R0VYQ0JaT"></a>
<h1><A href='#toptopS0I0VUUzR'> 1. 初始安装 </A></h1>
<dl>
<dt><a href="http://pyblosxom.sourceforge.net/1.3/manual/x74.html">http://pyblosxom.sourceforge.net/1.3/manual/x74.html</a></dt><dd>
  任何一步都不能少！！！
  折腾了几天才发现，默许的只识别 .txt 文件的！！
  原先就是在 BSD 中只安放了 "firstpost" 文本文件， 
  所以,一直报怨没有找到页面的输出…………呜乎哀哉！！
</dd>
</dl>

<a id="toc2R0lYQ0IyR" name="toc2R0lYQ0IyR"></a>
<h1><A href='#toptopS0I0VUUzR'> 2. 规划 </A></h1>
<p>
一个实用的，简练的Blog 系统到底需要哪些功能？
</p>
 <ol>
 <li>按照用户喜欢的格式来写
 </li>
 <li>样式可定制
 </li>
 <li>备份方便
 </li>
 <li>有SNS功能
 </li>
 </ol>

<p></p>
<p>
齐了！其它的各种功能不过是对应的加强了
</p>
<a id="toc3R0lYRENMU" name="toc3R0lYRENMU"></a>
<h2><A href='#toptopS0I0VUUzR'> 2.1. PyBlosxom </A></h2>
<dl>
<dt>[PyBlosxom <a href="http://wiki.woodpecker.org.cn/moin/PyBlosxom">http://wiki.woodpecker.org.cn/moin/PyBlosxom</a>?]</dt><dd>
    是<a href="http://blosxom.com/">blosxom</a>的Python Clone 
    <ul>
    <li><b>优点</b>:
        <ol>
        <li>不用DB
        </li>
        <li>插件化
        </li>
        <li>简单
        </li>
        </ol>
    </li>
    <li><i>缺点</i>:
        <ul>
        <li>速度?
        </li>
        <li>部属?
        </li>
        </ul>
    </li>
    </ul>
</dd>
</dl>

<p>
反正,是轻型的个人Blog 系统,就当作Python 应用练习了!
</p>
<p>
Pure Python 系统哪!嗯哪……就是求个Cool.
</p>
<hr class="light" />
<p>
动力源自::<b><a href="http://txt2tags.sf.net">txt2tags</a></b>
</p>
<p>
<img align="middle" src="/pybimage/technorati-over.gif" border="0" alt=""/>
    <a href="http://www.technorati.com/tags/OpenSource">OpenSource</a>
    ,<a href="http://www.technorati.com/tags/PyBlosxom">PyBlosxom</a>
    ,<a href="http://www.technorati.com/tags/hacking">hacking</a>
</p>
</div>

<!-- xhtml code generated by txt2tags 2.4 (http://txt2tags.sf.net) -->
<!-- cmdline: txt2tags ./techic/PyBlosxom/PyblosxomInstallog-2006-01-01-23-23.t2t -->

  </content>

  <rdf:Seq>

  </rdf:Seq>
</rdf:Description>
</rdf:RDF>
