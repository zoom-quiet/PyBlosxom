<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh">
<title type="text">Z<sub>en</sub>o<sub>f</sub>o<sub>pen</sub>M<sup>ind</sup>. Q<sub>uickly</sub>u<sub>tility</sub>i<sub>nternet</sub>e<sub>asy</sub>t<sup>echnic</sup></title>
<subtitle type="html"><![CDATA[
Zoom.Quiet's PyBlosxom blogging
]]></subtitle>
<id>/pyblosxom/techic/PyBlosxom/PyblosxomFixLog4-2006-01-21-23-23.atom</id>
<link rel="alternate" type="text/html" href="/pyblosxom" />
<link rel="self" type="application/atom+xml" href="/pyblosxom/techic/PyBlosxom/PyblosxomFixLog4-2006-01-21-23-23.atom" />


<author>
<name>Zoom.Quiet</name>
<uri>/pyblosxom/techic/PyBlosxom/PyblosxomFixLog4-2006-01-21-23-23.atom</uri>
<email>zoomquiet+blog [AT] gmail.com</email>
</author>
<rights>Copyright 2001-2012 Zoom.Quiet</rights>
<generator uri="http://pyblosxom.sourceforge.net/" version="1.5.2">
PyBlosxom http://pyblosxom.sourceforge.net/ 1.5.2
</generator>

<updated>2006-01-21T15:23:00Z</updated>
<!-- icon?  logo?  -->

<entry>
<title type="html">[hack4]SVN集成</title>
<category term="" />
<id>/pyblosxom/2006/01/21/PyblosxomFixLog4-2006-01-21-23-23</id>
<updated>2006-01-21T15:23:00Z</updated>
<published>2006-01-21T15:23:00Z</published>
<link rel="alternate" type="text/html" href="/pyblosxom/techic/PyBlosxom/PyblosxomFixLog4-2006-01-21-23-23.html" />
<content type="html">&lt;div class=&quot;header&quot; id=&quot;header&quot;&gt;
&lt;a name=&#x27;toptopTE5VR0NZM&#x27; id=&#x27;toptopTE5VR0NZM&#x27;&gt;&lt;&#x2F;a&gt;&lt;h1&gt;[hack4]SVN集成&lt;&#x2F;h1&gt;
&lt;h2&gt;通过SVN来发布Blog&lt;&#x2F;h2&gt;
&lt;h3&gt;t2t渲染:2010-10-09 02:21:39&lt;&#x2F;h3&gt;
&lt;&#x2F;div&gt;

&lt;div class=&quot;toc&quot; id=&quot;toc&quot;&gt;
  &lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#toc1R0VYQ0JaT&quot;&gt;好坏&lt;&#x2F;a&gt;
  &lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;#toc2R0lYQ0JaT&quot;&gt;实施&lt;&#x2F;a&gt;
    &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;#toc3R0lYRENMU&quot;&gt;2.1. 配合&lt;&#x2F;a&gt;
    &lt;&#x2F;li&gt;
    &lt;&#x2F;ul&gt;
  &lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;#toc4R01YQ0FWQ&quot;&gt;TODO&lt;&#x2F;a&gt;
    &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;#toc5R01YRENMU&quot;&gt;3.1. 技术文档&lt;&#x2F;a&gt;
    &lt;&#x2F;li&gt;
    &lt;&#x2F;ul&gt;
  &lt;&#x2F;li&gt;
  &lt;&#x2F;ol&gt;

&lt;&#x2F;div&gt;
&lt;div class=&quot;body&quot; id=&quot;body&quot;&gt;
&lt;a id=&quot;toc1R0VYQ0JaT&quot; name=&quot;toc1R0VYQ0JaT&quot;&gt;&lt;&#x2F;a&gt;
&lt;h1&gt;&lt;A href=&#x27;#toptopTE5VR0NZM&#x27;&gt; 1. 好坏 &lt;&#x2F;A&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;
在本地使用自个儿习惯的格式来写，通过SVN 自动版本同步到PyBlsxom发布！
&lt;&#x2F;p&gt;
&lt;dl&gt;
&lt;dt&gt;好处：&lt;&#x2F;dt&gt;&lt;dd&gt;
    &lt;ol&gt;
    &lt;li&gt;天然的备份！
    &lt;&#x2F;li&gt;
    &lt;li&gt;离线写作！
    &lt;&#x2F;li&gt;
    &lt;li&gt;本地搜索！
    &lt;&#x2F;li&gt;
    &lt;li&gt;自然备份！
    &lt;&#x2F;li&gt;
    &lt;li&gt;强力版本管理！
    &lt;&#x2F;li&gt;
    &lt;li&gt;灾难恢复简单
    &lt;&#x2F;li&gt;
    &lt;li&gt;Blog系统定制权限容易管理
    &lt;&#x2F;li&gt;
    &lt;li&gt;...
    &lt;&#x2F;li&gt;
    &lt;&#x2F;ol&gt;
&lt;&#x2F;dd&gt;
&lt;dt&gt;坏处:&lt;&#x2F;dt&gt;&lt;dd&gt;
    &lt;ul&gt;
    &lt;li&gt;要学习TortoiseSVN 的使用
    &lt;&#x2F;li&gt;
    &lt;li&gt;要修正Blogging 习惯..
    &lt;&#x2F;li&gt;
    &lt;&#x2F;ul&gt;
&lt;&#x2F;dd&gt;
&lt;&#x2F;dl&gt;

&lt;a id=&quot;toc2R0lYQ0JaT&quot; name=&quot;toc2R0lYQ0JaT&quot;&gt;&lt;&#x2F;a&gt;
&lt;h1&gt;&lt;A href=&#x27;#toptopTE5VR0NZM&#x27;&gt; 2. 实施 &lt;&#x2F;A&gt;&lt;&#x2F;h1&gt;
&lt;dl&gt;
&lt;dt&gt;幸好有积累:&lt;&#x2F;dt&gt;&lt;dd&gt;
    &lt;ul&gt;
    &lt;li&gt;曾经&lt;a href=&quot;http:&#x2F;&#x2F;wiki.woodpecker.org.cn&#x2F;moin&#x2F;CvsRootHook&quot;&gt;透过CVS进行内容维护&lt;&#x2F;a&gt;
    &lt;&#x2F;li&gt;
    &lt;li&gt;后来同理推导出:&lt;a href=&quot;http:&#x2F;&#x2F;wiki.woodpecker.org.cn&#x2F;moin&#x2F;SubversionHooks&quot;&gt;透过SVN进行内容维护&lt;&#x2F;a&gt;
    &lt;p&gt;&lt;&#x2F;p&gt;
    &lt;&#x2F;li&gt;
    &lt;&#x2F;ul&gt;
&lt;&#x2F;dd&gt;
&lt;dt&gt;HOOKs 脚本:&lt;&#x2F;dt&gt;&lt;dd&gt;
    &lt;ul&gt;
    &lt;li&gt;关键代码:
&lt;pre&gt;
在post-commit 事务中插入:
    ...
        upsvn = &quot;%s update %s&quot;%(self.SVN,(aim+mod) )
        fup = os.popen(upsvn)
        up = fup.read().strip()
        self.chkpybt2t(up
                        ,&quot;pyblosxom&#x2F;zoomquiet&#x2F;data&#x2F;&quot;)
&lt;&#x2F;pre&gt;
    &lt;&#x2F;li&gt;
    &lt;li&gt;专用t2t 处理函式:
&lt;pre&gt;
def chkpybt2t(self,dirs,mark):
    &quot;&quot;&quot;auto check PyBlosxom .t2t blog
    &quot;&quot;&quot;
    for l in dirs.split():
        if mark in l:
            self.autot2t(l)
def autot2t(self,upath):
    &quot;&quot;&quot;自动处理t2t 到对应PyBlosxom 目录
        - upath svnlook 出来的对应更新记录
        - t2t 文件本身输出 xhtml ，cp为txt 由PyBlosxom 显示
        - 另外输出为.moin 的wiki 文件
        --target moin
    &quot;&quot;&quot;    
    t2txhtml = &quot;%s %s&quot;%(self.T2T,upath)
    t2tmoin = &quot;%s %s %s&quot;%(self.T2T,&quot; --target moin &quot;,upath)
    try:
        r, w, e = popen2.popen3(t2txhtml)
        r, w, e = popen2.popen3(t2tmoin)
        r.close()
        e.close()
        w.close()        
    except:
        # 日志处理
        print &amp;gt;&amp;gt; self.f,&quot;~&quot;*7+&quot;t2t::popen2.popen3() ::crash&quot;    
&lt;&#x2F;pre&gt;
    &lt;&#x2F;li&gt;
    &lt;li&gt;通过标准的t2t 命令行来输出两种格式的文件 .xhtml和.moin 的
    &lt;&#x2F;li&gt;
    &lt;li&gt;&lt;b&gt;特别的&lt;&#x2F;b&gt; 为了定制方便，将 txt2tags 的执行文件专用化:
    &lt;&#x2F;li&gt;
    &lt;li&gt;&lt;code&gt;self.T2T = &quot;&#x2F;path&#x2F;to&#x2F;my&#x2F;PyBlosxom&#x2F;plugins&#x2F;preformatters&#x2F;txt2tags&quot;&lt;&#x2F;code&gt;
    以便进行定制修改
        &lt;ul&gt;
        &lt;li&gt;&lt;b&gt;完全是因为t2t 太精巧了，就一个文件哪！&lt;&#x2F;b&gt;
        &lt;&#x2F;li&gt;
        &lt;&#x2F;ul&gt;
    &lt;&#x2F;li&gt;
    &lt;&#x2F;ul&gt;
&lt;&#x2F;dd&gt;
&lt;&#x2F;dl&gt;

&lt;a id=&quot;toc3R0lYRENMU&quot; name=&quot;toc3R0lYRENMU&quot;&gt;&lt;&#x2F;a&gt;
&lt;h2&gt;&lt;A href=&#x27;#toptopTE5VR0NZM&#x27;&gt; 2.1. 配合 &lt;&#x2F;A&gt;&lt;&#x2F;h2&gt;
&lt;dl&gt;
&lt;dt&gt;已经完成的:&lt;&#x2F;dt&gt;&lt;dd&gt;
    &lt;ol&gt;
    &lt;li&gt;由 SVN hooks 在每次检入时，自动检测是否为指定模块中的 .t2t 文件?
    &lt;&#x2F;li&gt;
    &lt;li&gt;如果是:
        &lt;ul&gt;
        &lt;li&gt;自动更新指定目录
        &lt;&#x2F;li&gt;
        &lt;li&gt;&lt;code&gt;svn up&lt;&#x2F;code&gt;
        &lt;&#x2F;li&gt;
        &lt;&#x2F;ul&gt;
    &lt;&#x2F;li&gt;
    &lt;li&gt;再调用t2t 输出两种格式的文件
        &lt;ul&gt;
        &lt;li&gt;&lt;code&gt;txt2tags &#x2F;path&#x2F;to&#x2F;the&#x2F;.t2t&lt;&#x2F;code&gt;
        &lt;&#x2F;li&gt;
        &lt;li&gt;&lt;code&gt;txt2tags  --target moin  &#x2F;path&#x2F;to&#x2F;the&#x2F;.t2t&lt;&#x2F;code&gt;
        &lt;&#x2F;li&gt;
        &lt;&#x2F;ul&gt;
    &lt;&#x2F;li&gt;
    &lt;&#x2F;ol&gt;
&lt;&#x2F;dd&gt;
&lt;dt&gt;现在要最终处理的:&lt;&#x2F;dt&gt;&lt;dd&gt;
    &lt;ul&gt;
    &lt;li&gt;如何令PyBlosxom 解析 .xhtml 到页面中?
    &lt;&#x2F;li&gt;
    &lt;li&gt;默许的是仅仅识别 html&#x2F;纯文本格式的 .txt 文件的
    &lt;&#x2F;li&gt;
    &lt;li&gt;参照已有的&lt;a href=&quot;plugins&#x2F;py.phtm&quot;&gt;py.py&lt;&#x2F;a&gt; 预格式脚本:
        &lt;ul&gt;
        &lt;li&gt;hack 出 &lt;a href=&quot;plugins&#x2F;xhtml.phtm&quot;&gt;xhtml.py&lt;&#x2F;a&gt;
        &lt;&#x2F;li&gt;
        &lt;li&gt;配置文件中打开此插件
&lt;pre&gt;
config.py 中
...
py[&#x27;load_plugins&#x27;] = [&quot;pycalendar&quot;
                      , &quot;py&quot;
                      ,&quot;xhtml&quot;
                      ...
&lt;&#x2F;pre&gt;
        &lt;&#x2F;li&gt;
        &lt;li&gt;搞掂！
        &lt;&#x2F;li&gt;
        &lt;&#x2F;ul&gt;
    &lt;&#x2F;li&gt;
    &lt;&#x2F;ul&gt;
&lt;&#x2F;dd&gt;
&lt;dt&gt;特别的:&lt;&#x2F;dt&gt;&lt;dd&gt;
    &lt;ul&gt;
    &lt;li&gt;文章标题的抓取:
&lt;pre&gt;

    for line in open(filename,&quot;r&quot;).readlines():
        if &quot;&amp;lt;title&amp;gt;&quot; in line:
            title=line[7:].replace(&quot;&amp;lt;&#x2F;title&amp;gt;&quot;,&quot;&quot;)
            break
&lt;&#x2F;pre&gt;
    &lt;&#x2F;li&gt;
    &lt;li&gt;一般性的，PyBlosxom 是从原文头行取，但是 xhtml 中有HTML 的格式标识字串，所以，要从&lt;code&gt;&amp;lt;title&amp;gt;&lt;&#x2F;code&gt; 标签中抓，
    &lt;&#x2F;li&gt;
    &lt;li&gt;这里不使用 正则表达式，是为了加速，简单的行读取，
    比在内存中分析整个文件要Pythonic 哪!
    &lt;&#x2F;li&gt;
    &lt;&#x2F;ul&gt;
&lt;&#x2F;dd&gt;
&lt;&#x2F;dl&gt;

&lt;a id=&quot;toc4R01YQ0FWQ&quot; name=&quot;toc4R01YQ0FWQ&quot;&gt;&lt;&#x2F;a&gt;
&lt;h1&gt;&lt;A href=&#x27;#toptopTE5VR0NZM&#x27;&gt; 3. TODO &lt;&#x2F;A&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;
&lt;b&gt;没有最好，只有更好！&lt;&#x2F;b&gt;
&lt;&#x2F;p&gt;
&lt;dl&gt;
&lt;dt&gt;现在:&lt;&#x2F;dt&gt;&lt;dd&gt;
    &lt;ol&gt;
    &lt;li&gt;通过 SVN 在本地使用t2t 格式来写作
    &lt;&#x2F;li&gt;
    &lt;li&gt;通过 SVN hooks 自动处理服务端的文章输出
    &lt;&#x2F;li&gt;
    &lt;li&gt;PyBlosxom 中的专用格式处理脚本，识别并辅助处理了 xhtml 输出!
    &lt;&#x2F;li&gt;
    &lt;&#x2F;ol&gt;
&lt;&#x2F;dd&gt;
&lt;dt&gt;但是:&lt;&#x2F;dt&gt;&lt;dd&gt;
    不能聪明的识别不同的原始文件来提供下载哪！
    如果是 .py 的，在 &lt;i&gt;永久链接 .t2t .moin&lt;&#x2F;i&gt; 处的其它链接就有问题！
    &lt;ul&gt;
    &lt;li&gt;询问列表，却没有人回答:
&lt;pre&gt;
发件人: will guaraldi &amp;lt;willg@bluesock.org&amp;gt;	邮送域: lists.sourceforge.net
收件人: pyblosxom-devel@lists.sourceforge.net
日期: 2006-1-25 上午12:15
主题: [Pyblosxom-devel] will&#x27;s status

Just as an fyi, my email client is still having problems with Zoom&#x27;s
emails so I haven&#x27;t read any of them yet.

I also started classes a week and a half ago and I&#x27;m working part time
this semester.  As such, I&#x27;m going to be laying low on PyBlosxom stuff
including fielding user requests and help for a while.  I&#x27;ll try to get to
bugs and user isues at least once a month.

I am also still sitting on a contributed plugins release--that&#x27;s first
priority.  I need to go through and fix the logging issues on plugins I
don&#x27;t use.

&#x2F;will

&lt;&#x2F;pre&gt;
    &lt;&#x2F;li&gt;
    &lt;li&gt;呜乎哀哉！看来 Gmail 并不是完美的哪！俺的询问邮件没有中文字符的哪！
    连标点也不敢使用中文的...
    &lt;&#x2F;li&gt;
    &lt;&#x2F;ul&gt;
&lt;&#x2F;dd&gt;
&lt;&#x2F;dl&gt;

&lt;a id=&quot;toc5R01YRENMU&quot; name=&quot;toc5R01YRENMU&quot;&gt;&lt;&#x2F;a&gt;
&lt;h2&gt;&lt;A href=&#x27;#toptopTE5VR0NZM&#x27;&gt; 3.1. 技术文档 &lt;&#x2F;A&gt;&lt;&#x2F;h2&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&quot;http:&#x2F;&#x2F;pyblosxom.sourceforge.net&#x2F;1.3&#x2F;manual&#x2F;x307.html#AEN356&quot;&gt;PyBlosoxm模板中有效变量&lt;&#x2F;a&gt;&lt;&#x2F;dt&gt;&lt;dd&gt;
    但是！
    &lt;ul&gt;
    &lt;li&gt;&lt;b&gt;file_path&lt;&#x2F;b&gt; just the filename and extensions of the entry
     &lt;ul&gt;
     &lt;li&gt;就是仅仅输出了文件名儿，没有后缀的说
     &lt;&#x2F;li&gt;
     &lt;li&gt;开源项目的文档是极其重要的组成部分，有多少项目是因为文档不全而自然消亡的哪…………
     &lt;&#x2F;li&gt;
     &lt;&#x2F;ul&gt;
    &lt;&#x2F;li&gt;
    &lt;&#x2F;ul&gt;
&lt;&#x2F;dd&gt;
&lt;&#x2F;dl&gt;

&lt;dl&gt;
&lt;dt&gt;技术文档樣文:&lt;&#x2F;dt&gt;&lt;dd&gt;
    日本人作的就是要好些:
        &lt;ul&gt;
        &lt;li&gt;&lt;b&gt;&lt;a href=&quot;..&#x2F;060117-OSSdocDemoJPS.phtm&quot;&gt;FreeBSD unionfsの改善提案&lt;&#x2F;a&gt;&lt;&#x2F;b&gt;
        &lt;&#x2F;li&gt;
        &lt;&#x2F;ul&gt;
&lt;&#x2F;dd&gt;
&lt;&#x2F;dl&gt;

&lt;hr class=&quot;light&quot; &#x2F;&gt;
&lt;p&gt;
动力源自::&lt;b&gt;&lt;a href=&quot;http:&#x2F;&#x2F;txt2tags.sf.net&quot;&gt;txt2tags&lt;&#x2F;a&gt;&lt;&#x2F;b&gt;
&lt;&#x2F;p&gt;
&lt;p&gt;
&lt;img align=&quot;middle&quot; src=&quot;&#x2F;pybimage&#x2F;technorati-over.gif&quot; border=&quot;0&quot; alt=&quot;&quot;&#x2F;&gt;
    &lt;a href=&quot;http:&#x2F;&#x2F;www.technorati.com&#x2F;tags&#x2F;OpenSource&quot;&gt;OpenSource&lt;&#x2F;a&gt;
    ,&lt;a href=&quot;http:&#x2F;&#x2F;www.technorati.com&#x2F;tags&#x2F;PyBlosxom&quot;&gt;PyBlosxom&lt;&#x2F;a&gt;
    ,&lt;a href=&quot;http:&#x2F;&#x2F;www.technorati.com&#x2F;tags&#x2F;hacking&quot;&gt;hacking&lt;&#x2F;a&gt;
&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;

&lt;!-- xhtml code generated by txt2tags 2.4 (http:&#x2F;&#x2F;txt2tags.sf.net) --&gt;
&lt;!-- cmdline: txt2tags .&#x2F;techic&#x2F;PyBlosxom&#x2F;PyblosxomFixLog4-2006-01-21-23-23.t2t --&gt;
</content>
</entry>
</feed>
